syntax = "proto3";
package client;

option go_package = "../proto/client";

service FileService {
    rpc Download(FileDownloadRequest) returns (stream FileChunk);
    //rpc DownloadFromEdge(EdgeFileDownloadRequest) returns (stream EdgeFileChunk);
    rpc Upload(stream FileChunk) returns (Response);
    // rpc Delete(FileDeleteRequest) returns (FileDeleteResponse)
}

enum ErrorCodes {
    OK = 0;
    CHUNK_ERROR = 10;
    INVALID_TICKET = 11;
    FILE_CREATE_ERROR = 12 ;
    FILE_NOT_FOUND_ERROR = 13;
    FILE_WRITE_ERROR = 15;
    FILE_READ_ERROR = 16;
    STREAM_CLOSE_ERROR = 17;
}

message FileDownloadRequest {
    string ticket_id = 1;
    string file_name = 2;
}

message FileChunk {
    //ticket_id in context
    bytes chunk = 1;
}

message Response {
    string ticket_id = 1;
    bool success = 2;
}

// message EdgeFileDownloadRequest {
//     string file_name = 1;
// }

// message EdgeFileChunk {
//     bytes chunk = 1;
// }