networks:
  sdcc_network:
    driver: bridge
    name: sdcc_network

services:

  client:
    build: 
      dockerfile: ./docker/client.dockerfile
    tty: true
    stdin_open: true
    volumes:
      - ./client:/src
      - ./proto:/proto
      - ./docker/client_files:/files
    networks:
      - sdcc_network
    working_dir : /src

  registry:
    image: golang
    tty: true
    stdin_open: true
    networks:
      - sdcc_network
    volumes:
      - ./registry:/src
    working_dir : /src
    
  login:
    build: 
      dockerfile: ./docker/login.dockerfile
    tty: true
    stdin_open: true
    networks:
      - sdcc_network
    volumes:
      - ./login:/src
      - ./proto/login:/proto
    working_dir : /src

  edge:
    build:
      dockerfile: ./docker/edge.dockerfile
    tty: true
    stdin_open: true
    networks:
      - sdcc_network
    volumes:
      - type: tmpfs
        target: /temp_storage
        tmpfs:
          size: 100M   ## Va per pagine di memoria principale (4k)
      - ./edge:/src
      - ./proto/file_transfer:/proto
      - ./docker/edge_files:/files
      - ./docker/aws:/aws
    working_dir : /src
    deploy:
      resources:
        limits: # Hard Limit
          cpus: '1'
          memory: 1.5G
        # reservations: # Soft Limit
        #   cpus: 0.25
        #   memory: 128M
    

  rabbit_mq:
    image: rabbitmq
    hostname: rabbit_mq
    tty: true
    stdin_open: true
    networks:
      - sdcc_network
    
